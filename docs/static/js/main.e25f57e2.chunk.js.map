{"version":3,"sources":["components/Navbar/index.js","components/About/index.js","components/MintButton/index.js","components/Gallery/index.js","components/RecentGallery/index.js","components/Footer/index.js","components/Home/index.js","data/abis.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","useState","navLinkOpen","activateBrowserWallet","useEthers","className","href","classes","renderClasses","id","onClick","error","account","chainId","slice","length","About","MintButton","contract","Contract","addresses","nft","abis","library","useContractFunction","transactionName","send","state","onMintPressed","a","disabled","_","require","Gallery","tokens","setTokens","imgSvgs","setImgSvgs","useEffect","walletOfOwner","newTokens","map","val","toNumber","sortBy","getTokens","allSvgs","tkn_id","tokenURI","rawUri","decodedUri","atob","split","encodedSvg","JSON","parse","push","getImages","imgObj","selectedToken","tokenid","src","alt","totalSupply","tokenSupply","numToken","Math","min","shiftToken","max","Array","keys","i","Footer","Home","RecentGallery","App","active","newProps","toString","undefined","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","DAppProvider","config","multicallAddresses","document","getElementById"],"mappings":"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","file":"static/js/main.e25f57e2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useEthers } from '@usedapp/core'\nimport './index.css';\n\nfunction Navbar(props) {\n  const [navLinkOpen, navLinkToggle] = useState(false)\n  const { activateBrowserWallet } = useEthers()\n\n  const renderClasses = () => {\n    let classes = \"flex justify-around items-center\"\n    if (navLinkOpen) {\n      classes += \" active\"\n    }\n    return classes\n  }\n\n  return (\n    <nav className=\"px-5 flex items-center justify-between\">\n      <div className=\"logo flex flex-row items-center\">\n        <a className=\"link text-3xl\" href=\"/\"><h4 className=\"text-gray-200\">Stripes</h4></a>\n      </div>\n\n      <ul className={renderClasses()}>\n        <li>\n          <button className=\"btn\" id=\"connect-btn\" onClick={() => activateBrowserWallet()}>\n            {!props.error ?\n              props.account ?\n                props.chainId === 588 || props.chainId === 1088 || props.chainId === 31337 ?\n                  <p>{props.account.slice(0, 4) + \"...\" + props.account.slice(props.account.length-4, props.account.length)}</p>\n                  :\n                  \"Wrong network\"\n                : \"Connect\"\n              : \"Unsupported Network\"\n            }\n          </button>\n        </li>\n      </ul>\n    </nav>\n  )    \n}\n \nexport default Navbar;","import React from 'react';\n\nfunction About(props) {\n  return (\n    <div className=\"flex flex-col items-center w-full px-8\">\n      <p className=\"mb-4\">\n        Stripes is a 100% on-chain generative art project. The metadata for each STRIPE token\n        is generated when your NFT is minted and stored on-chain. The smart contract decodes\n        this on-chain data to draw the image on an SVG canvas. These NFTs do not rely on IPFS\n        or APIs to retrieve the image off-chain.\n      </p>\n      <p className=\"my-4\">\n        Each STRIPE token contains as 32x32 pixel SVG canvas with 10 stripes. Each stripe is\n        randomly generated with these characteristics:\n      </p>\n      <ul className=\"list-disc text-left\">\n        <li>Width of 1-32 pixels</li>\n        <li>Y-location</li>\n        <li>Color (R-G-B)</li>\n        <li>Speed (1-10 second loop)</li>\n      </ul>\n    </div>\n  )\n}\n\nexport default About;","import React, { useState, useEffect } from \"react\"\nimport { Contract } from 'ethers'\nimport { ethers } from \"ethers\";\nimport { useContractFunction } from '@usedapp/core'\n\nfunction MintButton(props) {\n    let [price, setPrice] = useState();\n    let contract = new Contract(props.addresses.nft, props.abis.nft, props.library)\n    const { state, send } = useContractFunction(contract, 'mint', { transactionName: 'Mint' })\n\n    const onMintPressed = async () => {\n        send()\n        return\n    };\n\n    return (\n        <button id='mint-btn' className='btn' onClick={onMintPressed} disabled={false}>\n            Mint\n        </button>\n    )\n}\n\nexport default MintButton\n","import React, { useState, useEffect } from \"react\";\nimport { Contract } from '@ethersproject/contracts';\n\nvar _ = require('lodash');\n\nfunction Gallery(props) {\n    let [tokens, setTokens] = useState();\n    let [imgSvgs, setImgSvgs] = useState();\n\n    useEffect(() => {\n        let contract = new Contract(props.addresses.nft, props.abis.nft, props.library)\n        async function getTokens() {\n            var newTokens = await contract.walletOfOwner(props.account)\n            newTokens = newTokens.map((val) => { return val.toNumber() })\n            newTokens = _.sortBy(newTokens)\n            setTokens(newTokens)\n        }\n\n        getTokens();\n    }, [props]);\n\n    useEffect(() => {\n        let contract = new Contract(props.addresses.nft, props.abis.nft, props.library)\n        async function getImages() {\n            var allSvgs = []\n            for (var tkn_id of tokens) {\n                try {\n                    var rawUri = await contract.tokenURI(tkn_id)\n                    var decodedUri = atob(rawUri.split(',')[1])\n                    var encodedSvg = JSON.parse(decodedUri)['image']\n                    allSvgs.push({\n                        'token_id': tkn_id,\n                        'img_svg': encodedSvg\n                    })\n                } catch {\n                    allSvgs.push({\n                        'token_id': tkn_id,\n                        'img_svg': ''\n                    })\n                }\n            }\n            setImgSvgs(allSvgs)\n        }\n\n        if (tokens) {\n            getImages()\n        }\n    }, [props, tokens])\n\n    if (tokens && imgSvgs) {\n        return (\n            <div className=\"flex flex-col items-center w-full px-3\">\n                <h2>\n                    You own {tokens.length} Stripes\n                </h2>\n                <div className='grid grid-cols-5 gap-2 place-items-center mt-6 mb-6'>\n                    {\n                        imgSvgs.map((imgObj) => {\n                            let isSelected = imgObj['token_id'] === props.selectedToken\n                            return (\n                                <img key={imgObj['token_id']} tokenid={imgObj['token_id']} className=\"gallery-img\" src={imgObj['img_svg']} alt=\"NFT\"/>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <p>Loading...</p>\n        )\n    }\n}\n\nexport default Gallery\n","import React, { useState, useEffect } from \"react\";\nimport { Contract } from '@ethersproject/contracts';\n\nfunction Gallery(props) {\n    let [tokens, setTokens] = useState();\n    let [imgSvgs, setImgSvgs] = useState();\n\n    useEffect(() => {\n        let contract = new Contract(props.addresses.nft, props.abis.nft, props.library)\n        async function getTokens() {\n            var tokenSupply = await contract.totalSupply()\n            tokenSupply = tokenSupply.toNumber()\n            let numToken = Math.min(tokenSupply, 5)\n            let shiftToken = Math.max(0, tokenSupply - numToken)\n            \n            let newTokens = [...Array(numToken).keys()].map(i => i + shiftToken);\n            setTokens(newTokens)\n        }\n\n        getTokens();\n    }, [props]);\n\n    useEffect(() => {\n        let contract = new Contract(props.addresses.nft, props.abis.nft, props.library)\n        async function getImages() {\n            var allSvgs = []\n            for (var tkn_id of tokens) {\n                try {\n                    var rawUri = await contract.tokenURI(tkn_id)\n                    var decodedUri = atob(rawUri.split(',')[1])\n                    var encodedSvg = JSON.parse(decodedUri)['image']\n                    allSvgs.push({\n                        'token_id': tkn_id,\n                        'img_svg': encodedSvg\n                    })\n                } catch {\n                    allSvgs.push({\n                        'token_id': tkn_id,\n                        'img_svg': ''\n                    })\n                }\n            }\n            setImgSvgs(allSvgs)\n        }\n\n        if (tokens) {\n            getImages()\n        }\n    }, [props, tokens])\n\n    if (tokens && imgSvgs) {\n        return (\n            <div className=\"flex flex-col items-center w-full px-3\">\n                <h2>\n                    Recently Minted Stripes\n                </h2>\n                <div className='grid grid-cols-5 gap-2 place-items-center mt-6 mb-6'>\n                    {\n                        imgSvgs.map((imgObj) => {\n                            let isSelected = imgObj['token_id'] === props.selectedToken\n                            return (\n                                <img key={imgObj['token_id']} tokenid={imgObj['token_id']} className=\"gallery-img\" src={imgObj['img_svg']} alt=\"NFT\"/>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <p>Loading...</p>\n        )\n    }\n}\n\nexport default Gallery\n","import React from 'react';\nimport { BsGithub, BsTwitter } from 'react-icons/bs';\n\nfunction Footer(props) {\n  return (\n    <div className=\"flex flex-row justify-evenly w-full text-gray-200 mb-8\">\n        <a className=\"flex flex-col items-center\" href=\"https://github.com/Tburm/stripes-nft\">\n          <BsGithub className=\"text-3xl\" />\n          <p>Contracts</p>\n        </a>\n        <a className=\"flex flex-col items-center\" href=\"https://github.com/Tburm/stripes-nft-app\">\n          <BsGithub className=\"text-3xl\" />\n          <p>App</p>\n        </a>\n        <a className=\"flex flex-col items-center\" href=\"https://twitter.com/troybeee\">\n          <BsTwitter className=\"text-3xl\" />\n          <p>@troybeee</p>\n        </a>\n    </div>\n  )\n}\n \nexport default Footer;","import React from 'react';\n\n// components\nimport About from '../About'\nimport MintButton from '../MintButton'\nimport Gallery from '../Gallery'\nimport RecentGallery from '../RecentGallery'\nimport Footer from '../Footer'\n\nfunction Home(props) {\n  if(props.addresses) {\n    return (\n      <div className=\"flex flex-col items-center w-full\">\n        <div className=\"card w-3/5\">\n          <About {...props} />\n        </div>\n        <MintButton {...props} />\n        <div className=\"card w-3/5\">\n          <Gallery {...props} />\n        </div>\n        <div className=\"card w-3/5\">\n          <RecentGallery {...props} />\n        </div>\n        <div className=\"w-3/5\">\n          <Footer {...props} />\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"flex flex-col items-center w-full\">\n        <div className=\"card w-3/5\">\n          <About {...props} />\n        </div>\n        <div className=\"card w-3/5\">\n          <p>Connect to Metis Stardust</p>\n        </div>\n        <div className=\"w-3/5\">\n          <Footer {...props} />\n        </div>\n      </div>\n    )\n  }\n}\n \nexport default Home;","import nftAbi from \"./abis/nft.json\";\n\nconst abis = {\n  \"nft\": nftAbi\n};\n\nexport default abis;\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { useEthers } from '@usedapp/core'\n\n// styles\nimport './App.css';\n\n// components\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\n\n// data\nimport addresses from \"./data/addresses.json\";\nimport abis from \"./data/abis.js\";\n\nfunction App() {\n  const { active, account, library, chainId, error } = useEthers()\n\n  let newProps = {\n    active: active,\n    account: account,\n    library: library,\n    chainId: chainId,\n    error: error,\n    abis: abis,\n    addresses: chainId && addresses[chainId.toString()] ? addresses[chainId.toString()]: undefined\n  }\n\n  return (\n    <div id=\"app\">\n      <div id=\"content\">\n        <Router>\n          <Navbar {...newProps}/>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home {...newProps} />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { DAppProvider } from '@usedapp/core'\n\nconst config = {\n  multicallAddresses: {\n    588: \"0xaF9D4DC0698d8FD9f41387ecb08D9976079B8086\",\n    31337: \"0x2909280299c58268d5faed54074823eafbb436e8\"\n  }\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <DAppProvider config={config}>\n      <App />\n    </DAppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}